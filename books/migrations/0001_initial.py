# Generated by Django 3.0.7 on 2020-09-10 21:05

import books.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('authors', '0003_auto_20200716_1332'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_authors', models.CharField(blank=True, max_length=600)),
                ('title', models.CharField(max_length=250)),
                ('summary', models.TextField(blank=True, max_length=2000)),
                ('slug', models.SlugField(default='', editable=False, max_length=250)),
                ('language', models.CharField(default='English', max_length=200)),
                ('publish_date', models.DateField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, upload_to=books.models.upload_location)),
                ('is_featured', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('series_num', models.PositiveIntegerField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='authors.Author')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'series',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserTaggedBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Book')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books_usertaggedbook_items', to='taggit.Tag')),
                ('tagger', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='book_tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Book')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books_taggedbook_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='add title', max_length=50)),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('rating', models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Average'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')], null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='reviews', to='books.Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='BookInstance2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pages', models.IntegerField(blank=True, null=True)),
                ('isbn10', models.CharField(blank=True, max_length=10, null=True)),
                ('isbn13', models.CharField(blank=True, max_length=13, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200)),
                ('due_back', models.DateField(blank=True, null=True)),
                ('book_type', models.CharField(blank=True, choices=[('p', 'Paperback'), ('h', 'Hardcover'), ('o', 'Oversized')], default='p', max_length=1)),
                ('status', models.CharField(blank=True, choices=[('m', 'Maintenance'), ('o', 'On loan'), ('a', 'Available'), ('r', 'Reserved')], default='a', max_length=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='books.Book')),
                ('borrower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Book Instance',
                'ordering': ['due_back'],
            },
        ),
        migrations.AddField(
            model_name='book',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='books.Series'),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='books.TaggedBook', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='book',
            name='user_tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', related_name='user_tags', through='books.UserTaggedBook', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='book',
            name='users_like',
            field=models.ManyToManyField(blank=True, related_name='books_liked', to=settings.AUTH_USER_MODEL),
        ),
    ]
